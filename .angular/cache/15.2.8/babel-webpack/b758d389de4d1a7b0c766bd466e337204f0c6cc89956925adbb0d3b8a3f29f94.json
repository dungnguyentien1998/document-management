{"ast":null,"code":"import { createReducer, on } from '@ngrx/store';\nimport * as todoActions from '../actions';\nimport * as _ from 'lodash';\nimport * as storage from '../state/storage';\nexport const initialState = {\n  reports: storage.getItem('todo').reports,\n  currentReport: {},\n  deleteReportId: '',\n  result: '',\n  isLoading: false,\n  isLoadingSuccess: false,\n  isLoadingFailure: false\n};\nconst todoReducer = createReducer(initialState,\n// Gereports\non(todoActions.getReports, state => ({\n  ...state,\n  isLoading: true\n})), on(todoActions.getReportsSuccess, (state, result) => ({\n  reports: result.response,\n  isLoading: false,\n  isLoadingSuccess: true\n})),\n// Create Report Reducers\non(todoActions.createReport, (state, {\n  report\n}) => ({\n  ...state,\n  isLoading: true,\n  currentReport: report\n})), on(todoActions.createReportSuccess, (state, result) => {\n  const reports = undefined !== state.reports ? _.cloneDeep(state.reports) : [];\n  const currentReport = undefined !== state.currentReport ? _.cloneDeep(state.currentReport) : {};\n  currentReport.id = result.reportId;\n  reports.push(currentReport);\n  return {\n    reports,\n    isLoading: false,\n    isLoadingSuccess: true\n  };\n}),\n// Delete Report Reducers\non(todoActions.deleteReport, (state, {\n  reportid\n}) => ({\n  ...state,\n  isLoading: true,\n  deleteReportId: reportid\n})), on(todoActions.deleteReportSuccess, (state, result) => {\n  let reports = undefined !== state.reports ? _.cloneDeep(state.reports) : [];\n  if (result.status) {\n    reports = reports.filter(report => report.id !== state.deleteReportId);\n  }\n  return {\n    reports,\n    isLoading: false,\n    isLoadingSuccess: true\n  };\n}),\n// Edit Report Reducers\non(todoActions.editReport, (state, {\n  report\n}) => ({\n  ...state,\n  isLoading: true,\n  currentReport: report\n})), on(todoActions.editReportSuccess, (state, result) => {\n  let reports = undefined !== state.reports ? _.cloneDeep(state.reports) : [];\n  const currentReport = undefined !== state.currentReport ? _.cloneDeep(state.currentReport) : {};\n  reports = reports.map(tsk => {\n    if (tsk.id === currentReport.id) {\n      tsk = currentReport;\n    }\n    return tsk;\n  });\n  return {\n    reports,\n    isLoading: false,\n    isLoadingSuccess: true\n  };\n}));\nexport function reducer(state, action) {\n  return todoReducer(state, action);\n}\nexport const getReports = state => {\n  return {\n    reports: state.reports,\n    isLoading: state.isLoading,\n    isLoadingSuccess: state.isLoadingSuccess\n  };\n};","map":{"version":3,"mappings":"AAAA,SAAiBA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAEvD,OAAO,KAAKC,WAAW,MAAM,YAAY;AACzC,OAAO,KAAKC,CAAC,MAAM,QAAQ;AAC3B,OAAO,KAAKC,OAAO,MAAM,kBAAkB;AAY3C,OAAO,MAAMC,YAAY,GAAU;EACjCC,OAAO,EAAEF,OAAO,CAACG,OAAO,CAAC,MAAM,CAAC,CAACD,OAAO;EACxCE,aAAa,EAAE,EAAE;EACjBC,cAAc,EAAE,EAAE;EAClBC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,KAAK;EAChBC,gBAAgB,EAAE,KAAK;EACvBC,gBAAgB,EAAE;CACnB;AAED,MAAMC,WAAW,GAAGd,aAAa,CAC/BK,YAAY;AAEZ;AACAJ,EAAE,CAACC,WAAW,CAACa,UAAU,EAAGC,KAAK,KAAM;EAAC,GAAGA,KAAK;EAAEL,SAAS,EAAE;AAAI,CAAC,CAAC,CAAC,EACpEV,EAAE,CAACC,WAAW,CAACe,iBAAiB,EAAE,CAACD,KAAK,EAAEN,MAAM,MAAM;EAACJ,OAAO,EAAEI,MAAM,CAACQ,QAAQ;EAAEP,SAAS,EAAE,KAAK;EAAEC,gBAAgB,EAAE;AAAI,CAAC,CAAC,CAAC;AAE5H;AACAX,EAAE,CAACC,WAAW,CAACiB,YAAY,EAAE,CAACH,KAAK,EAAE;EAACI;AAAM,CAAC,MAAM;EAAC,GAAGJ,KAAK;EAAEL,SAAS,EAAE,IAAI;EAAEH,aAAa,EAAEY;AAAM,CAAC,CAAC,CAAC,EACvGnB,EAAE,CAACC,WAAW,CAACmB,mBAAmB,EAAE,CAACL,KAAK,EAAEN,MAAM,KAAI;EACpD,MAAMJ,OAAO,GAAGgB,SAAS,KAAKN,KAAK,CAACV,OAAO,GAAGH,CAAC,CAACoB,SAAS,CAACP,KAAK,CAACV,OAAO,CAAC,GAAG,EAAE;EAC7E,MAAME,aAAa,GAAGc,SAAS,KAAKN,KAAK,CAACR,aAAa,GAAGL,CAAC,CAACoB,SAAS,CAACP,KAAK,CAACR,aAAa,CAAC,GAAG,EAAE;EAC/FA,aAAa,CAACgB,EAAE,GAAGd,MAAM,CAACe,QAAQ;EAClCnB,OAAO,CAACoB,IAAI,CAAClB,aAAa,CAAC;EAC3B,OAAO;IACLF,OAAO;IACPK,SAAS,EAAE,KAAK;IAChBC,gBAAgB,EAAE;GACnB;AACH,CAAC,CAAC;AAEF;AACAX,EAAE,CAACC,WAAW,CAACyB,YAAY,EAAE,CAACX,KAAK,EAAE;EAACY;AAAQ,CAAC,MAAM;EAAC,GAAGZ,KAAK;EAAEL,SAAS,EAAE,IAAI;EAAEF,cAAc,EAAEmB;AAAQ,CAAC,CAAC,CAAC,EAC5G3B,EAAE,CAACC,WAAW,CAAC2B,mBAAmB,EAAE,CAACb,KAAK,EAAEN,MAAM,KAAI;EACpD,IAAIJ,OAAO,GAAGgB,SAAS,KAAKN,KAAK,CAACV,OAAO,GAAGH,CAAC,CAACoB,SAAS,CAACP,KAAK,CAACV,OAAO,CAAC,GAAG,EAAE;EAC3E,IAAII,MAAM,CAACoB,MAAM,EAAE;IACjBxB,OAAO,GAAGA,OAAO,CAACyB,MAAM,CAACX,MAAM,IAAIA,MAAM,CAACI,EAAE,KAAKR,KAAK,CAACP,cAAc,CAAC;;EAExE,OAAO;IACLH,OAAO;IACPK,SAAS,EAAE,KAAK;IAChBC,gBAAgB,EAAE;GACnB;AACH,CAAC,CAAC;AAED;AACAX,EAAE,CAACC,WAAW,CAAC8B,UAAU,EAAE,CAAChB,KAAK,EAAE;EAACI;AAAM,CAAC,MAAM;EAAC,GAAGJ,KAAK;EAAEL,SAAS,EAAE,IAAI;EAAEH,aAAa,EAAEY;AAAM,CAAC,CAAC,CAAC,EACrGnB,EAAE,CAACC,WAAW,CAAC+B,iBAAiB,EAAE,CAACjB,KAAK,EAAEN,MAAM,KAAI;EACnD,IAAIJ,OAAO,GAAGgB,SAAS,KAAKN,KAAK,CAACV,OAAO,GAAGH,CAAC,CAACoB,SAAS,CAACP,KAAK,CAACV,OAAO,CAAC,GAAG,EAAE;EAC3E,MAAME,aAAa,GAAGc,SAAS,KAAKN,KAAK,CAACR,aAAa,GAAGL,CAAC,CAACoB,SAAS,CAACP,KAAK,CAACR,aAAa,CAAC,GAAG,EAAE;EAC/FF,OAAO,GAAGA,OAAO,CAAC4B,GAAG,CAACC,GAAG,IAAG;IAC1B,IAAIA,GAAG,CAACX,EAAE,KAAKhB,aAAa,CAACgB,EAAE,EAAE;MAC/BW,GAAG,GAAG3B,aAAa;;IAErB,OAAO2B,GAAG;EACZ,CAAC,CAAC;EACF,OAAO;IACL7B,OAAO;IACPK,SAAS,EAAE,KAAK;IAChBC,gBAAgB,EAAE;GACnB;AACH,CAAC,CAAC,CACH;AAED,OAAM,SAAUwB,OAAO,CAACpB,KAAwB,EAAEqB,MAAc;EAC9D,OAAOvB,WAAW,CAACE,KAAK,EAAEqB,MAAM,CAAC;AACnC;AAEA,OAAO,MAAMtB,UAAU,GAAIC,KAAY,IAAI;EACzC,OAAO;IACLV,OAAO,EAAEU,KAAK,CAACV,OAAO;IACtBK,SAAS,EAAEK,KAAK,CAACL,SAAS;IAC1BC,gBAAgB,EAAEI,KAAK,CAACJ;GACzB;AACH,CAAC","names":["createReducer","on","todoActions","_","storage","initialState","reports","getItem","currentReport","deleteReportId","result","isLoading","isLoadingSuccess","isLoadingFailure","todoReducer","getReports","state","getReportsSuccess","response","createReport","report","createReportSuccess","undefined","cloneDeep","id","reportId","push","deleteReport","reportid","deleteReportSuccess","status","filter","editReport","editReportSuccess","map","tsk","reducer","action"],"sourceRoot":"","sources":["/Users/tiendung1998/Documents/Angular/document-management/src/app/app-state/reducers/todo.reducer.ts"],"sourcesContent":["import { Action, createReducer, on } from '@ngrx/store';\nimport { Report } from '../entity';\nimport * as todoActions from '../actions';\nimport * as _ from 'lodash'\nimport * as storage from '../state/storage';\n\nexport interface State {\n  reports?: Report[];\n  currentReport?: Report;\n  deleteReportId?: any;\n  result?: any;\n  isLoading?: boolean;\n  isLoadingSuccess?: boolean;\n  isLoadingFailure?: boolean;\n}\n\nexport const initialState: State = {\n  reports: storage.getItem('todo').reports,\n  currentReport: {},\n  deleteReportId: '',\n  result: '',\n  isLoading: false,\n  isLoadingSuccess: false,\n  isLoadingFailure: false\n};\n\nconst todoReducer = createReducer(\n  initialState,\n\n  // Gereports\n  on(todoActions.getReports, (state) => ({...state, isLoading: true})),\n  on(todoActions.getReportsSuccess, (state, result) => ({reports: result.response, isLoading: false, isLoadingSuccess: true})),\n\n  // Create Report Reducers\n  on(todoActions.createReport, (state, {report}) => ({...state, isLoading: true, currentReport: report})),\n  on(todoActions.createReportSuccess, (state, result) => {\n    const reports = undefined !== state.reports ? _.cloneDeep(state.reports) : [];\n    const currentReport = undefined !== state.currentReport ? _.cloneDeep(state.currentReport) : {};\n    currentReport.id = result.reportId;\n    reports.push(currentReport);\n    return {\n      reports,\n      isLoading: false,\n      isLoadingSuccess: true\n    };\n  }),\n\n  // Delete Report Reducers\n  on(todoActions.deleteReport, (state, {reportid}) => ({...state, isLoading: true, deleteReportId: reportid})),\n  on(todoActions.deleteReportSuccess, (state, result) => {\n    let reports = undefined !== state.reports ? _.cloneDeep(state.reports) : [];\n    if (result.status) {\n      reports = reports.filter(report => report.id !== state.deleteReportId);\n    }\n    return {\n      reports,\n      isLoading: false,\n      isLoadingSuccess: true\n    };\n  }),\n\n   // Edit Report Reducers\n   on(todoActions.editReport, (state, {report}) => ({...state, isLoading: true, currentReport: report})),\n   on(todoActions.editReportSuccess, (state, result) => {\n    let reports = undefined !== state.reports ? _.cloneDeep(state.reports) : [];\n    const currentReport = undefined !== state.currentReport ? _.cloneDeep(state.currentReport) : {};\n    reports = reports.map(tsk => {\n      if (tsk.id === currentReport.id) {\n        tsk = currentReport;\n      }\n      return tsk;\n    });\n    return {\n      reports,\n      isLoading: false,\n      isLoadingSuccess: true\n    };\n  })\n);\n\nexport function reducer(state: State | undefined, action: Action): any {\n  return todoReducer(state, action);\n}\n\nexport const getReports = (state: State) => {\n  return {\n    reports: state.reports,\n    isLoading: state.isLoading,\n    isLoadingSuccess: state.isLoadingSuccess\n  };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
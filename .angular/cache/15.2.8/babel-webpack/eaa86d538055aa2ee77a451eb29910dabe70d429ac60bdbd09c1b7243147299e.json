{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Menu } from 'src/app/core/constants/menu';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class MenuService {\n  constructor(router) {\n    this.router = router;\n    this._showSidebar$ = new BehaviorSubject(true);\n    this._showMobileMenu$ = new BehaviorSubject(false);\n    this._pagesMenu$ = new BehaviorSubject([]);\n    this.subscription = new Subscription();\n    /** Set dynamic menu */\n    this._pagesMenu$.next(Menu.pages);\n    let sub = this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        /** Expand menu base on active route */\n        this._pagesMenu$.forEach(menuItem => {\n          menuItem.forEach(menu => {\n            let activeGroup = false;\n            menu.items.forEach(subMenu => {\n              const active = this.isActive(subMenu.route);\n              subMenu.expanded = active;\n              subMenu.active = active;\n              if (active) activeGroup = true;\n              if (subMenu.children) {\n                this.expand(subMenu.children);\n              }\n            });\n            menu.active = activeGroup;\n          });\n        });\n      }\n    });\n    this.subscription.add(sub);\n  }\n  get showSideBar$() {\n    return this._showSidebar$.asObservable();\n  }\n  get showMobileMenu$() {\n    return this._showMobileMenu$.asObservable();\n  }\n  get pagesMenu$() {\n    return this._pagesMenu$.asObservable();\n  }\n  set showSideBar(value) {\n    this._showSidebar$.next(value);\n  }\n  set showMobileMenu(value) {\n    this._showMobileMenu$.next(value);\n  }\n  toggleSidebar() {\n    this._showSidebar$.next(!this._showSidebar$.value);\n  }\n  toggleMenu(menu) {\n    this.showSideBar = true;\n    menu.expanded = !menu.expanded;\n  }\n  toggleSubMenu(submenu) {\n    submenu.expanded = !submenu.expanded;\n  }\n  expand(items) {\n    items.forEach(item => {\n      item.expanded = this.isActive(item.route);\n      if (item.children) this.expand(item.children);\n    });\n  }\n  isActive(instruction) {\n    return this.router.isActive(this.router.createUrlTree([instruction]), {\n      paths: 'subset',\n      queryParams: 'subset',\n      fragment: 'ignored',\n      matrixParams: 'ignored'\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)(i0.ɵɵinject(i1.Router));\n};\nMenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["NavigationEnd","BehaviorSubject","Subscription","Menu","MenuService","constructor","router","_pagesMenu$","next","pages","sub","events","subscribe","event","forEach","menuItem","menu","activeGroup","items","subMenu","active","isActive","route","expanded","children","expand","subscription","add","showSideBar$","_showSidebar$","asObservable","showMobileMenu$","_showMobileMenu$","pagesMenu$","showSideBar","value","showMobileMenu","toggleSidebar","toggleMenu","toggleSubMenu","submenu","item","instruction","createUrlTree","paths","queryParams","fragment","matrixParams","ngOnDestroy","unsubscribe","factory","providedIn"],"sourceRoot":"","sources":["/Users/tiendung1998/Documents/Angular/document-management/src/app/modules/layout/services/menu.service.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Menu } from 'src/app/core/constants/menu';\nimport { MenuItem, SubMenuItem } from 'src/app/core/models/menu.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService implements OnDestroy {\n  private _showSidebar$ = new BehaviorSubject<boolean>(true);\n  private _showMobileMenu$ = new BehaviorSubject<boolean>(false);\n  public _pagesMenu$ = new BehaviorSubject<MenuItem[]>([]);\n  private subscription = new Subscription();\n\n  constructor(private router: Router) {\n    /** Set dynamic menu */\n    this._pagesMenu$.next(Menu.pages);\n\n    let sub = this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        /** Expand menu base on active route */\n        this._pagesMenu$.forEach((menuItem) => {\n          menuItem.forEach((menu) => {\n            let activeGroup = false;\n            menu.items.forEach((subMenu) => {\n              const active = this.isActive(subMenu.route);\n              subMenu.expanded = active;\n              subMenu.active = active;\n              if (active) activeGroup = true;\n              if (subMenu.children) {\n                this.expand(subMenu.children);\n              }\n            });\n            menu.active = activeGroup;\n          });\n        });\n      }\n    });\n\n    this.subscription.add(sub);\n  }\n\n  get showSideBar$() {\n    return this._showSidebar$.asObservable();\n  }\n  get showMobileMenu$() {\n    return this._showMobileMenu$.asObservable();\n  }\n  get pagesMenu$() {\n    return this._pagesMenu$.asObservable();\n  }\n\n  set showSideBar(value: boolean) {\n    this._showSidebar$.next(value);\n  }\n  set showMobileMenu(value: boolean) {\n    this._showMobileMenu$.next(value);\n  }\n\n  public toggleSidebar() {\n    this._showSidebar$.next(!this._showSidebar$.value);\n  }\n\n  public toggleMenu(menu: any) {\n    this.showSideBar = true;\n    menu.expanded = !menu.expanded;\n  }\n\n  public toggleSubMenu(submenu: SubMenuItem) {\n    submenu.expanded = !submenu.expanded;\n  }\n\n  private expand(items: Array<any>) {\n    items.forEach((item) => {\n      item.expanded = this.isActive(item.route);\n      if (item.children) this.expand(item.children);\n    });\n  }\n\n  private isActive(instruction: any): boolean {\n    return this.router.isActive(this.router.createUrlTree([instruction]), {\n      paths: 'subset',\n      queryParams: 'subset',\n      fragment: 'ignored',\n      matrixParams: 'ignored',\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
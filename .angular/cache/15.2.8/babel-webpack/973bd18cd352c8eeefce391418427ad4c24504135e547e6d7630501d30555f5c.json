{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, Optional, SkipSelf, Component, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { of, throwError } from 'rxjs';\nimport { map, tap, catchError, finalize, share } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\nconst _c0 = [\"*\"];\nclass SvgLoader {}\nclass SvgHttpLoader extends SvgLoader {\n  constructor(http) {\n    super();\n    this.http = http;\n  }\n  getSvg(url) {\n    return this.http.get(url, {\n      responseType: 'text'\n    });\n  }\n}\nSvgHttpLoader.ɵfac = function SvgHttpLoader_Factory(t) {\n  return new (t || SvgHttpLoader)(i0.ɵɵinject(i1.HttpClient));\n};\nSvgHttpLoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SvgHttpLoader,\n  factory: SvgHttpLoader.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgHttpLoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }];\n  }, null);\n})();\nconst SERVER_URL = new InjectionToken('SERVER_URL');\nclass SvgIconRegistryService {\n  constructor(loader, platformId, serverUrl, _document) {\n    this.loader = loader;\n    this.platformId = platformId;\n    this.serverUrl = serverUrl;\n    this._document = _document;\n    this.iconsByUrl = new Map();\n    this.iconsLoadingByUrl = new Map();\n    this.document = this._document;\n  }\n  /** Add a SVG to the registry by passing a name and the SVG. */\n  addSvg(name, data) {\n    if (!this.iconsByUrl.has(name)) {\n      const div = this.document.createElement('DIV');\n      div.innerHTML = data;\n      const svg = div.querySelector('svg');\n      this.iconsByUrl.set(name, svg);\n    }\n  }\n  /** Load a SVG to the registry from a URL. */\n  loadSvg(url, name = url) {\n    // not sure if there should be a possibility to use name for server usage\n    // so overriding it for now if provided\n    // maybe should separate functionality for url and name use-cases\n    if (this.serverUrl && url.match(/^(http(s)?):/) === null) {\n      url = this.serverUrl + url;\n      name = url;\n    }\n    if (this.iconsByUrl.has(name)) {\n      return of(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n    const o = this.loader.getSvg(url).pipe(map(svg => {\n      const div = this.document.createElement('DIV');\n      div.innerHTML = svg;\n      return div.querySelector('svg');\n    }), tap(svg => this.iconsByUrl.set(name, svg)), catchError(err => {\n      console.error(err);\n      return throwError(err);\n    }), finalize(() => this.iconsLoadingByUrl.delete(name)), share());\n    this.iconsLoadingByUrl.set(name, o);\n    return o;\n  }\n  /** Get loaded SVG from registry by name. (also works by url because of blended map) */\n  getSvgByName(name) {\n    if (this.iconsByUrl.has(name)) {\n      return of(this.iconsByUrl.get(name));\n    } else if (this.iconsLoadingByUrl.has(name)) {\n      return this.iconsLoadingByUrl.get(name);\n    }\n    return throwError(`No svg with name '${name}' has been loaded`);\n  }\n  /** Remove a SVG from the registry by URL (or name). */\n  unloadSvg(url) {\n    if (this.iconsByUrl.has(url)) {\n      this.iconsByUrl.delete(url);\n    }\n  }\n}\nSvgIconRegistryService.ɵfac = function SvgIconRegistryService_Factory(t) {\n  return new (t || SvgIconRegistryService)(i0.ɵɵinject(SvgLoader), i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(SERVER_URL, 8), i0.ɵɵinject(DOCUMENT, 8));\n};\nSvgIconRegistryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: SvgIconRegistryService,\n  factory: SvgIconRegistryService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgIconRegistryService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: SvgLoader\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [SERVER_URL]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\nfunction SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, loader, platformId, serverUrl, document) {\n  return parentRegistry || new SvgIconRegistryService(loader, platformId, serverUrl, document);\n}\nconst SVG_ICON_REGISTRY_PROVIDER = {\n  provide: SvgIconRegistryService,\n  deps: [[new Optional(), new SkipSelf(), SvgIconRegistryService], SvgLoader, [PLATFORM_ID], [new Optional(), SERVER_URL], [new Optional(), DOCUMENT]],\n  useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY\n};\nclass SvgIconHelper {\n  constructor() {\n    this.loaded = false;\n  }\n}\nclass SvgIconComponent {\n  constructor(element, differs, renderer, iconReg, cdr) {\n    this.element = element;\n    this.differs = differs;\n    this.renderer = renderer;\n    this.iconReg = iconReg;\n    this.cdr = cdr;\n    this.stretch = false;\n    this.applyClass = false;\n    /** @deprecated since 9.1.0 */\n    this.applyCss = false;\n    this.helper = new SvgIconHelper();\n    this._svgStyle = null;\n  }\n  // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n  set svgStyle(values) {\n    this._svgStyle = values;\n    if (!this.helper.differ && values) {\n      this.helper.differ = this.differs.find(values).create();\n    }\n  }\n  ngOnInit() {\n    this.init();\n  }\n  ngOnDestroy() {\n    this.destroy();\n  }\n  ngOnChanges(changeRecord) {\n    const elemSvg = this.element.nativeElement.firstChild;\n    if (changeRecord.src || changeRecord.name) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n    if (changeRecord.stretch) {\n      this.stylize();\n    }\n    if (changeRecord.applyClass) {\n      if (this.applyClass) {\n        this.setClass(elemSvg, null, this.klass);\n      } else {\n        this.setClass(elemSvg, this.klass, null);\n      }\n    }\n    if (changeRecord.svgClass) {\n      this.setClass(elemSvg, changeRecord.svgClass.previousValue, changeRecord.svgClass.currentValue);\n    }\n    if (changeRecord.klass) {\n      const elem = this.element.nativeElement;\n      this.setClass(elem, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n      if (this.applyClass) {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n      } else {\n        this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n      }\n    }\n    if (changeRecord.viewBox) {\n      if (this.helper.loaded) {\n        this.destroy();\n      }\n      this.init();\n    }\n    if (changeRecord.applyCss) {\n      console.warn('applyCss deprecated since 9.1.0, will be removed in 10.0.0');\n      console.warn('use applyClass instead');\n    }\n    if (changeRecord.svgAriaLabel) {\n      this.doAria(changeRecord.svgAriaLabel.currentValue);\n    }\n  }\n  ngDoCheck() {\n    if (this.helper.svg && this.helper.differ) {\n      const changes = this.helper.differ.diff(this._svgStyle);\n      if (changes) {\n        this.applyChanges(changes);\n      }\n    }\n  }\n  init() {\n    if (this.name) {\n      const svgObs = this.iconReg.getSvgByName(this.name);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n      }\n    } else if (this.src) {\n      const svgObs = this.iconReg.loadSvg(this.src);\n      if (svgObs) {\n        this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n      }\n    } else {\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.cdr.markForCheck();\n    }\n  }\n  initSvg(svg) {\n    if (!this.helper.loaded && svg) {\n      this.setSvg(svg);\n      this.resetDiffer();\n    }\n  }\n  destroy() {\n    if (this.helper.icnSub) {\n      this.helper.icnSub.unsubscribe();\n    }\n    this.helper = new SvgIconHelper();\n  }\n  resetDiffer() {\n    if (this._svgStyle && !this.helper.differ) {\n      this.helper.differ = this.differs.find(this._svgStyle).create();\n    }\n  }\n  setSvg(svg) {\n    if (!this.helper.loaded && svg) {\n      this.helper.svg = svg;\n      const icon = svg.cloneNode(true);\n      const elem = this.element.nativeElement;\n      elem.innerHTML = '';\n      this.renderer.appendChild(elem, icon);\n      this.helper.loaded = true;\n      this.copyNgContentAttribute(elem, icon);\n      if (this.klass && this.applyClass) {\n        this.setClass(elem.firstChild, null, this.klass);\n      }\n      if (this.svgClass) {\n        this.setClass(elem.firstChild, null, this.svgClass);\n      }\n      if (this.viewBox) {\n        if (this.viewBox === 'auto') {\n          // Attempt to convert height & width to a viewBox.\n          const w = icon.getAttribute('width');\n          const h = icon.getAttribute('height');\n          if (h && w) {\n            const vb = `0 0 ${w} ${h}`;\n            this.renderer.setAttribute(icon, 'viewBox', vb);\n            this.renderer.removeAttribute(icon, 'width');\n            this.renderer.removeAttribute(icon, 'height');\n          }\n        } else if (this.viewBox !== '') {\n          this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n          this.renderer.removeAttribute(icon, 'width');\n          this.renderer.removeAttribute(icon, 'height');\n        }\n      }\n      this.stylize();\n      // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n      // the SVG's aria-label.\n      if (!(this.svgAriaLabel === undefined && elem.firstChild.hasAttribute('aria-label'))) {\n        this.doAria(this.svgAriaLabel || '');\n      }\n      this.cdr.markForCheck();\n    }\n  }\n  copyNgContentAttribute(hostElem, icon) {\n    const attributes = hostElem.attributes;\n    const len = attributes.length;\n    for (let i = 0; i < len; i += 1) {\n      const attribute = attributes.item(i);\n      if (attribute && attribute.name.startsWith('_ngcontent')) {\n        this.setNgContentAttribute(icon, attribute.name);\n        break;\n      }\n    }\n  }\n  setNgContentAttribute(parent, attributeName) {\n    this.renderer.setAttribute(parent, attributeName, '');\n    const len = parent.childNodes.length;\n    for (let i = 0; i < len; i += 1) {\n      const child = parent.childNodes[i];\n      if (child instanceof Element) {\n        this.setNgContentAttribute(child, attributeName);\n      }\n    }\n  }\n  stylize() {\n    if (this.helper.svg) {\n      const svg = this.element.nativeElement.firstChild;\n      if (this.stretch === true) {\n        this.renderer.setAttribute(svg, 'preserveAspectRatio', 'none');\n      } else if (this.stretch === false) {\n        this.renderer.removeAttribute(svg, 'preserveAspectRatio');\n      }\n    }\n  }\n  applyChanges(changes) {\n    changes.forEachRemovedItem(record => this.setStyle(record.key, null));\n    changes.forEachAddedItem(record => this.setStyle(record.key, record.currentValue));\n    changes.forEachChangedItem(record => this.setStyle(record.key, record.currentValue));\n  }\n  setStyle(nameAndUnit, value) {\n    const [name, unit] = nameAndUnit.split('.');\n    value = value !== null && unit ? `${value}${unit}` : value;\n    const svg = this.element.nativeElement.firstChild;\n    if (value !== null) {\n      this.renderer.setStyle(svg, name, value);\n    } else {\n      this.renderer.removeStyle(svg, name);\n    }\n  }\n  setClass(target, previous, current) {\n    if (target) {\n      if (previous) {\n        const klasses = (Array.isArray(previous) ? previous : previous.split(' ')).filter(klass => klass);\n        for (const k of klasses) {\n          this.renderer.removeClass(target, k);\n        }\n      }\n      if (current) {\n        const klasses = (Array.isArray(current) ? current : current.split(' ')).filter(klass => klass);\n        for (const k of klasses) {\n          this.renderer.addClass(target, k);\n        }\n      }\n    }\n  }\n  doAria(label) {\n    const svg = this.element.nativeElement.firstChild;\n    if (svg) {\n      if (label === '') {\n        this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n        this.renderer.removeAttribute(svg, 'aria-label');\n      } else {\n        this.renderer.removeAttribute(svg, 'aria-hidden');\n        this.renderer.setAttribute(svg, 'aria-label', label);\n      }\n    }\n  }\n}\nSvgIconComponent.ɵfac = function SvgIconComponent_Factory(t) {\n  return new (t || SvgIconComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.KeyValueDiffers), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SvgIconRegistryService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nSvgIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: SvgIconComponent,\n  selectors: [[\"svg-icon\"]],\n  inputs: {\n    src: \"src\",\n    name: \"name\",\n    stretch: \"stretch\",\n    applyClass: \"applyClass\",\n    applyCss: \"applyCss\",\n    svgClass: \"svgClass\",\n    klass: [\"class\", \"klass\"],\n    viewBox: \"viewBox\",\n    svgAriaLabel: \"svgAriaLabel\",\n    svgStyle: \"svgStyle\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function SvgIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SvgIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'svg-icon',\n      template: '<ng-content></ng-content>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.KeyValueDiffers\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: SvgIconRegistryService\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    src: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    stretch: [{\n      type: Input\n    }],\n    applyClass: [{\n      type: Input\n    }],\n    applyCss: [{\n      type: Input\n    }],\n    svgClass: [{\n      type: Input\n    }],\n    klass: [{\n      type: Input,\n      args: ['class']\n    }],\n    viewBox: [{\n      type: Input\n    }],\n    svgAriaLabel: [{\n      type: Input\n    }],\n    svgStyle: [{\n      type: Input\n    }]\n  });\n})();\nclass AngularSvgIconModule {\n  static forRoot(config = {}) {\n    return {\n      ngModule: AngularSvgIconModule,\n      providers: [SVG_ICON_REGISTRY_PROVIDER, config.loader || {\n        provide: SvgLoader,\n        useClass: SvgHttpLoader\n      }]\n    };\n  }\n}\nAngularSvgIconModule.ɵfac = function AngularSvgIconModule_Factory(t) {\n  return new (t || AngularSvgIconModule)();\n};\nAngularSvgIconModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AngularSvgIconModule\n});\nAngularSvgIconModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularSvgIconModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [SvgIconComponent],\n      exports: [SvgIconComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularSvgIconModule, SERVER_URL, SVG_ICON_REGISTRY_PROVIDER, SVG_ICON_REGISTRY_PROVIDER_FACTORY, SvgHttpLoader, SvgIconComponent, SvgIconRegistryService, SvgLoader };","map":{"version":3,"names":["i0","Injectable","InjectionToken","PLATFORM_ID","Inject","Optional","SkipSelf","Component","Input","NgModule","DOCUMENT","CommonModule","of","throwError","map","tap","catchError","finalize","share","i1","SvgLoader","SvgHttpLoader","constructor","http","getSvg","url","get","responseType","ɵfac","HttpClient","ɵprov","type","SERVER_URL","SvgIconRegistryService","loader","platformId","serverUrl","_document","iconsByUrl","Map","iconsLoadingByUrl","document","addSvg","name","data","has","div","createElement","innerHTML","svg","querySelector","set","loadSvg","match","o","pipe","err","console","error","delete","getSvgByName","unloadSvg","Object","decorators","args","undefined","SVG_ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","SVG_ICON_REGISTRY_PROVIDER","provide","deps","useFactory","SvgIconHelper","loaded","SvgIconComponent","element","differs","renderer","iconReg","cdr","stretch","applyClass","applyCss","helper","_svgStyle","svgStyle","values","differ","find","create","ngOnInit","init","ngOnDestroy","destroy","ngOnChanges","changeRecord","elemSvg","nativeElement","firstChild","src","stylize","setClass","klass","svgClass","previousValue","currentValue","elem","viewBox","warn","svgAriaLabel","doAria","ngDoCheck","changes","diff","applyChanges","svgObs","icnSub","subscribe","initSvg","markForCheck","setSvg","resetDiffer","unsubscribe","icon","cloneNode","appendChild","copyNgContentAttribute","w","getAttribute","h","vb","setAttribute","removeAttribute","hasAttribute","hostElem","attributes","len","length","i","attribute","item","startsWith","setNgContentAttribute","parent","attributeName","childNodes","child","Element","forEachRemovedItem","record","setStyle","key","forEachAddedItem","forEachChangedItem","nameAndUnit","value","unit","split","removeStyle","target","previous","current","klasses","Array","isArray","filter","k","removeClass","addClass","label","ElementRef","KeyValueDiffers","Renderer2","ChangeDetectorRef","ɵcmp","selector","template","AngularSvgIconModule","forRoot","config","ngModule","providers","useClass","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/Users/tiendung1998/Documents/Angular/document-management/node_modules/angular-svg-icon/fesm2020/angular-svg-icon.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, Optional, SkipSelf, Component, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { of, throwError } from 'rxjs';\nimport { map, tap, catchError, finalize, share } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\n\nclass SvgLoader {\n}\nclass SvgHttpLoader extends SvgLoader {\n    constructor(http) {\n        super();\n        this.http = http;\n    }\n    getSvg(url) {\n        return this.http.get(url, { responseType: 'text' });\n    }\n}\nSvgHttpLoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgHttpLoader, deps: [{ token: i1.HttpClient }], target: i0.ɵɵFactoryTarget.Injectable });\nSvgHttpLoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgHttpLoader });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgHttpLoader, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }]; } });\n\nconst SERVER_URL = new InjectionToken('SERVER_URL');\nclass SvgIconRegistryService {\n    constructor(loader, platformId, serverUrl, _document) {\n        this.loader = loader;\n        this.platformId = platformId;\n        this.serverUrl = serverUrl;\n        this._document = _document;\n        this.iconsByUrl = new Map();\n        this.iconsLoadingByUrl = new Map();\n        this.document = this._document;\n    }\n    /** Add a SVG to the registry by passing a name and the SVG. */\n    addSvg(name, data) {\n        if (!this.iconsByUrl.has(name)) {\n            const div = this.document.createElement('DIV');\n            div.innerHTML = data;\n            const svg = div.querySelector('svg');\n            this.iconsByUrl.set(name, svg);\n        }\n    }\n    /** Load a SVG to the registry from a URL. */\n    loadSvg(url, name = url) {\n        // not sure if there should be a possibility to use name for server usage\n        // so overriding it for now if provided\n        // maybe should separate functionality for url and name use-cases\n        if (this.serverUrl && url.match(/^(http(s)?):/) === null) {\n            url = this.serverUrl + url;\n            name = url;\n        }\n        if (this.iconsByUrl.has(name)) {\n            return of(this.iconsByUrl.get(name));\n        }\n        else if (this.iconsLoadingByUrl.has(name)) {\n            return this.iconsLoadingByUrl.get(name);\n        }\n        const o = this.loader.getSvg(url).pipe(map(svg => {\n            const div = this.document.createElement('DIV');\n            div.innerHTML = svg;\n            return div.querySelector('svg');\n        }), tap(svg => this.iconsByUrl.set(name, svg)), catchError(err => {\n            console.error(err);\n            return throwError(err);\n        }), finalize(() => this.iconsLoadingByUrl.delete(name)), share());\n        this.iconsLoadingByUrl.set(name, o);\n        return o;\n    }\n    /** Get loaded SVG from registry by name. (also works by url because of blended map) */\n    getSvgByName(name) {\n        if (this.iconsByUrl.has(name)) {\n            return of(this.iconsByUrl.get(name));\n        }\n        else if (this.iconsLoadingByUrl.has(name)) {\n            return this.iconsLoadingByUrl.get(name);\n        }\n        return throwError(`No svg with name '${name}' has been loaded`);\n    }\n    /** Remove a SVG from the registry by URL (or name). */\n    unloadSvg(url) {\n        if (this.iconsByUrl.has(url)) {\n            this.iconsByUrl.delete(url);\n        }\n    }\n}\nSvgIconRegistryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgIconRegistryService, deps: [{ token: SvgLoader }, { token: PLATFORM_ID }, { token: SERVER_URL, optional: true }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nSvgIconRegistryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgIconRegistryService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgIconRegistryService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: SvgLoader }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [SERVER_URL]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nfunction SVG_ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, loader, platformId, serverUrl, document) {\n    return parentRegistry || new SvgIconRegistryService(loader, platformId, serverUrl, document);\n}\nconst SVG_ICON_REGISTRY_PROVIDER = {\n    provide: SvgIconRegistryService,\n    deps: [[new Optional(), new SkipSelf(), SvgIconRegistryService], SvgLoader, [PLATFORM_ID],\n        [new Optional(), SERVER_URL], [new Optional(), DOCUMENT]\n    ],\n    useFactory: SVG_ICON_REGISTRY_PROVIDER_FACTORY\n};\n\nclass SvgIconHelper {\n    constructor() {\n        this.loaded = false;\n    }\n}\nclass SvgIconComponent {\n    constructor(element, differs, renderer, iconReg, cdr) {\n        this.element = element;\n        this.differs = differs;\n        this.renderer = renderer;\n        this.iconReg = iconReg;\n        this.cdr = cdr;\n        this.stretch = false;\n        this.applyClass = false;\n        /** @deprecated since 9.1.0 */\n        this.applyCss = false;\n        this.helper = new SvgIconHelper();\n        this._svgStyle = null;\n    }\n    // Adapted from ngStyle (see:  angular/packages/common/src/directives/ng_style.ts)\n    set svgStyle(values) {\n        this._svgStyle = values;\n        if (!this.helper.differ && values) {\n            this.helper.differ = this.differs.find(values).create();\n        }\n    }\n    ngOnInit() {\n        this.init();\n    }\n    ngOnDestroy() {\n        this.destroy();\n    }\n    ngOnChanges(changeRecord) {\n        const elemSvg = this.element.nativeElement.firstChild;\n        if (changeRecord.src || changeRecord.name) {\n            if (this.helper.loaded) {\n                this.destroy();\n            }\n            this.init();\n        }\n        if (changeRecord.stretch) {\n            this.stylize();\n        }\n        if (changeRecord.applyClass) {\n            if (this.applyClass) {\n                this.setClass(elemSvg, null, this.klass);\n            }\n            else {\n                this.setClass(elemSvg, this.klass, null);\n            }\n        }\n        if (changeRecord.svgClass) {\n            this.setClass(elemSvg, changeRecord.svgClass.previousValue, changeRecord.svgClass.currentValue);\n        }\n        if (changeRecord.klass) {\n            const elem = this.element.nativeElement;\n            this.setClass(elem, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n            if (this.applyClass) {\n                this.setClass(elemSvg, changeRecord.klass.previousValue, changeRecord.klass.currentValue);\n            }\n            else {\n                this.setClass(elemSvg, changeRecord.klass.previousValue, null);\n            }\n        }\n        if (changeRecord.viewBox) {\n            if (this.helper.loaded) {\n                this.destroy();\n            }\n            this.init();\n        }\n        if (changeRecord.applyCss) {\n            console.warn('applyCss deprecated since 9.1.0, will be removed in 10.0.0');\n            console.warn('use applyClass instead');\n        }\n        if (changeRecord.svgAriaLabel) {\n            this.doAria(changeRecord.svgAriaLabel.currentValue);\n        }\n    }\n    ngDoCheck() {\n        if (this.helper.svg && this.helper.differ) {\n            const changes = this.helper.differ.diff(this._svgStyle);\n            if (changes) {\n                this.applyChanges(changes);\n            }\n        }\n    }\n    init() {\n        if (this.name) {\n            const svgObs = this.iconReg.getSvgByName(this.name);\n            if (svgObs) {\n                this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n            }\n        }\n        else if (this.src) {\n            const svgObs = this.iconReg.loadSvg(this.src);\n            if (svgObs) {\n                this.helper.icnSub = svgObs.subscribe(svg => this.initSvg(svg));\n            }\n        }\n        else {\n            const elem = this.element.nativeElement;\n            elem.innerHTML = '';\n            this.cdr.markForCheck();\n        }\n    }\n    initSvg(svg) {\n        if (!this.helper.loaded && svg) {\n            this.setSvg(svg);\n            this.resetDiffer();\n        }\n    }\n    destroy() {\n        if (this.helper.icnSub) {\n            this.helper.icnSub.unsubscribe();\n        }\n        this.helper = new SvgIconHelper();\n    }\n    resetDiffer() {\n        if (this._svgStyle && !this.helper.differ) {\n            this.helper.differ = this.differs.find(this._svgStyle).create();\n        }\n    }\n    setSvg(svg) {\n        if (!this.helper.loaded && svg) {\n            this.helper.svg = svg;\n            const icon = svg.cloneNode(true);\n            const elem = this.element.nativeElement;\n            elem.innerHTML = '';\n            this.renderer.appendChild(elem, icon);\n            this.helper.loaded = true;\n            this.copyNgContentAttribute(elem, icon);\n            if (this.klass && this.applyClass) {\n                this.setClass(elem.firstChild, null, this.klass);\n            }\n            if (this.svgClass) {\n                this.setClass(elem.firstChild, null, this.svgClass);\n            }\n            if (this.viewBox) {\n                if (this.viewBox === 'auto') {\n                    // Attempt to convert height & width to a viewBox.\n                    const w = icon.getAttribute('width');\n                    const h = icon.getAttribute('height');\n                    if (h && w) {\n                        const vb = `0 0 ${w} ${h}`;\n                        this.renderer.setAttribute(icon, 'viewBox', vb);\n                        this.renderer.removeAttribute(icon, 'width');\n                        this.renderer.removeAttribute(icon, 'height');\n                    }\n                }\n                else if (this.viewBox !== '') {\n                    this.renderer.setAttribute(icon, 'viewBox', this.viewBox);\n                    this.renderer.removeAttribute(icon, 'width');\n                    this.renderer.removeAttribute(icon, 'height');\n                }\n            }\n            this.stylize();\n            // If there is not a svgAriaLabel and the SVG has an arial-label, then do not override\n            // the SVG's aria-label.\n            if (!(this.svgAriaLabel === undefined && elem.firstChild.hasAttribute('aria-label'))) {\n                this.doAria(this.svgAriaLabel || '');\n            }\n            this.cdr.markForCheck();\n        }\n    }\n    copyNgContentAttribute(hostElem, icon) {\n        const attributes = hostElem.attributes;\n        const len = attributes.length;\n        for (let i = 0; i < len; i += 1) {\n            const attribute = attributes.item(i);\n            if (attribute && attribute.name.startsWith('_ngcontent')) {\n                this.setNgContentAttribute(icon, attribute.name);\n                break;\n            }\n        }\n    }\n    setNgContentAttribute(parent, attributeName) {\n        this.renderer.setAttribute(parent, attributeName, '');\n        const len = parent.childNodes.length;\n        for (let i = 0; i < len; i += 1) {\n            const child = parent.childNodes[i];\n            if (child instanceof Element) {\n                this.setNgContentAttribute(child, attributeName);\n            }\n        }\n    }\n    stylize() {\n        if (this.helper.svg) {\n            const svg = this.element.nativeElement.firstChild;\n            if (this.stretch === true) {\n                this.renderer.setAttribute(svg, 'preserveAspectRatio', 'none');\n            }\n            else if (this.stretch === false) {\n                this.renderer.removeAttribute(svg, 'preserveAspectRatio');\n            }\n        }\n    }\n    applyChanges(changes) {\n        changes.forEachRemovedItem((record) => this.setStyle(record.key, null));\n        changes.forEachAddedItem((record) => this.setStyle(record.key, record.currentValue));\n        changes.forEachChangedItem((record) => this.setStyle(record.key, record.currentValue));\n    }\n    setStyle(nameAndUnit, value) {\n        const [name, unit] = nameAndUnit.split('.');\n        value = value !== null && unit ? `${value}${unit}` : value;\n        const svg = this.element.nativeElement.firstChild;\n        if (value !== null) {\n            this.renderer.setStyle(svg, name, value);\n        }\n        else {\n            this.renderer.removeStyle(svg, name);\n        }\n    }\n    setClass(target, previous, current) {\n        if (target) {\n            if (previous) {\n                const klasses = (Array.isArray(previous) ? previous : previous.split(' ')).filter((klass) => klass);\n                for (const k of klasses) {\n                    this.renderer.removeClass(target, k);\n                }\n            }\n            if (current) {\n                const klasses = (Array.isArray(current) ? current : current.split(' ')).filter((klass) => klass);\n                for (const k of klasses) {\n                    this.renderer.addClass(target, k);\n                }\n            }\n        }\n    }\n    doAria(label) {\n        const svg = this.element.nativeElement.firstChild;\n        if (svg) {\n            if (label === '') {\n                this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n                this.renderer.removeAttribute(svg, 'aria-label');\n            }\n            else {\n                this.renderer.removeAttribute(svg, 'aria-hidden');\n                this.renderer.setAttribute(svg, 'aria-label', label);\n            }\n        }\n    }\n}\nSvgIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgIconComponent, deps: [{ token: i0.ElementRef }, { token: i0.KeyValueDiffers }, { token: i0.Renderer2 }, { token: SvgIconRegistryService }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nSvgIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: SvgIconComponent, selector: \"svg-icon\", inputs: { src: \"src\", name: \"name\", stretch: \"stretch\", applyClass: \"applyClass\", applyCss: \"applyCss\", svgClass: \"svgClass\", klass: [\"class\", \"klass\"], viewBox: \"viewBox\", svgAriaLabel: \"svgAriaLabel\", svgStyle: \"svgStyle\" }, usesOnChanges: true, ngImport: i0, template: '<ng-content></ng-content>', isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: SvgIconComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'svg-icon',\n                    template: '<ng-content></ng-content>'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.KeyValueDiffers }, { type: i0.Renderer2 }, { type: SvgIconRegistryService }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { src: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], stretch: [{\n                type: Input\n            }], applyClass: [{\n                type: Input\n            }], applyCss: [{\n                type: Input\n            }], svgClass: [{\n                type: Input\n            }], klass: [{\n                type: Input,\n                args: ['class']\n            }], viewBox: [{\n                type: Input\n            }], svgAriaLabel: [{\n                type: Input\n            }], svgStyle: [{\n                type: Input\n            }] } });\n\nclass AngularSvgIconModule {\n    static forRoot(config = {}) {\n        return {\n            ngModule: AngularSvgIconModule,\n            providers: [\n                SVG_ICON_REGISTRY_PROVIDER,\n                config.loader || { provide: SvgLoader, useClass: SvgHttpLoader }\n            ]\n        };\n    }\n}\nAngularSvgIconModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: AngularSvgIconModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAngularSvgIconModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: AngularSvgIconModule, declarations: [SvgIconComponent], imports: [CommonModule], exports: [SvgIconComponent] });\nAngularSvgIconModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: AngularSvgIconModule, imports: [[\n            CommonModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: AngularSvgIconModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                    ],\n                    declarations: [\n                        SvgIconComponent\n                    ],\n                    exports: [SvgIconComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularSvgIconModule, SERVER_URL, SVG_ICON_REGISTRY_PROVIDER, SVG_ICON_REGISTRY_PROVIDER_FACTORY, SvgHttpLoader, SvgIconComponent, SvgIconRegistryService, SvgLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
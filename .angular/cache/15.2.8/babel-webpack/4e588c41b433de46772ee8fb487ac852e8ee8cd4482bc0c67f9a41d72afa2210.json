{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"angular-svg-icon\";\nfunction SignUpComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be an email address valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, SignUpComponent_div_20_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, SignUpComponent_div_20_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"email\"]);\n  }\n}\nfunction SignUpComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignUpComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, SignUpComponent_div_28_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is__invalid-input\": a0\n  };\n};\n// import { AppState } from 'src/app/store/app.state';\n// import { signupStart } from 'src/app/store/auth/auth.actions';\nexport class SignUpComponent {\n  constructor(_formBuilder, _router) {\n    this._formBuilder = _formBuilder;\n    this._router = _router;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  togglePasswordTextType() {\n    this.passwordTextType = !this.passwordTextType;\n  }\n  onSubmit() {\n    console.log(\"========\");\n    this.submitted = true;\n    const {\n      email,\n      password,\n      fullname,\n      phone\n    } = this.form.value;\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    // this.store.dispatch(signupStart({ fullname, email, password, phone }));\n    // this._router.navigate(['/']);\n  }\n}\n\nSignUpComponent.ɵfac = function SignUpComponent_Factory(t) {\n  return new (t || SignUpComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\nSignUpComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignUpComponent,\n  selectors: [[\"app-sign-up\"]],\n  decls: 53,\n  vars: 13,\n  consts: [[1, \"my-10\", \"space-y-6\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"mb-1\", \"text-3xl\", \"font-semibold\", \"text-gray-700\", \"dark:text-white\"], [1, \"text-primary-500\"], [1, \"text-sm\", \"text-gray-400\", \"dark:text-night-200\"], [\"type\", \"button\", \"routerLink\", \"/dashboard\", 1, \"flex\", \"w-full\", \"items-center\", \"justify-center\", \"rounded-md\", \"border\", \"border-gray-300\", \"bg-white\", \"py-2\", \"px-4\", \"text-sm\", \"font-medium\", \"text-gray-400\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary-500\", \"focus:ring-offset-2\", \"hover:bg-gray-50\", \"dark:border-night-500\", \"dark:bg-night-700\", \"dark:text-night-200\", \"dark:hover:bg-night-600\"], [\"src\", \"assets/icons/google-logo.svg\", 3, \"svgClass\"], [1, \"my-4\", \"flex\", \"items-center\", \"before:mt-0.5\", \"before:flex-1\", \"before:border-t\", \"before:border-gray-300\", \"after:mt-0.5\", \"after:flex-1\", \"after:border-t\", \"after:border-gray-300\", \"dark:before:border-night-500\", \"dark:after:border-night-500\"], [1, \"mx-4\", \"mb-0\", \"text-center\", \"text-sm\", \"text-gray-400\", \"dark:text-night-400\"], [1, \"space-y-3\", \"text-left\"], [1, \"form__group\"], [1, \"relative\"], [\"type\", \"text\", \"id\", \"email\", \"placeholder\", \" \", \"formControlName\", \"email\", 1, \"peer\", \"block\", 3, \"ngClass\"], [\"for\", \"email\", 1, \"absolute\", \"top-2\", \"left-1\", \"z-10\", \"origin-[0]\", \"-translate-y-4\", \"scale-95\", \"transform\", \"bg-white\", \"px-2\", \"text-sm\", \"text-gray-500\", \"duration-300\", \"peer-placeholder-shown:top-1/2\", \"peer-placeholder-shown:-translate-y-1/2\", \"peer-placeholder-shown:scale-100\", \"peer-focus:top-2\", \"peer-focus:-translate-y-4\", \"peer-focus:scale-95\", \"peer-focus:px-2\", \"peer-focus:text-primary-500\", \"dark:bg-night-700\", \"dark:text-night-200\"], [\"class\", \"is__invalid-error\", 4, \"ngIf\"], [\"id\", \"password\", \"placeholder\", \" \", \"formControlName\", \"password\", 1, \"peer\", \"block\", 3, \"type\", \"ngClass\"], [\"for\", \"password\", 1, \"absolute\", \"top-2\", \"left-1\", \"z-10\", \"origin-[0]\", \"-translate-y-4\", \"scale-95\", \"transform\", \"bg-white\", \"px-2\", \"text-sm\", \"text-gray-500\", \"duration-300\", \"peer-placeholder-shown:top-1/2\", \"peer-placeholder-shown:-translate-y-1/2\", \"peer-placeholder-shown:scale-100\", \"peer-focus:top-2\", \"peer-focus:-translate-y-4\", \"peer-focus:scale-95\", \"peer-focus:px-2\", \"peer-focus:text-primary-600\", \"dark:bg-night-700\", \"dark:text-night-200\"], [1, \"absolute\", \"top-2.5\", \"right-5\", \"cursor-pointer\", \"text-gray-400\", \"dark:text-night-300\", 3, \"click\"], [3, \"src\", \"svgClass\"], [1, \"grid\", \"grid-cols-4\", \"gap-2\"], [1, \"h-1\", \"rounded-sm\", \"bg-gray-200\", \"dark:bg-night-500\"], [1, \"text-xs\", \"text-gray-400\", \"dark:text-night-300\"], [\"type\", \"password\", \"id\", \"confirm-password\", \"placeholder\", \" \", 1, \"peer\", \"block\"], [\"for\", \"confirm-password\", 1, \"absolute\", \"top-2\", \"left-1\", \"z-10\", \"origin-[0]\", \"-translate-y-4\", \"scale-95\", \"transform\", \"bg-white\", \"px-2\", \"text-sm\", \"text-gray-500\", \"duration-300\", \"peer-placeholder-shown:top-1/2\", \"peer-placeholder-shown:-translate-y-1/2\", \"peer-placeholder-shown:scale-100\", \"peer-focus:top-2\", \"peer-focus:-translate-y-4\", \"peer-focus:scale-95\", \"peer-focus:px-2\", \"peer-focus:text-primary-600\", \"dark:bg-night-700\", \"dark:text-night-200\"], [1, \"flex\", \"items-center\", \"justify-between\", \"space-x-3\"], [1, \"flex\", \"items-center\"], [\"id\", \"accept-term\", \"name\", \"accept-term\", \"type\", \"checkbox\"], [\"for\", \"accept-term\", 1, \"ml-2\", \"block\", \"text-sm\", \"text-gray-400\", \"dark:text-night-200\"], [1, \"font-medium\", \"text-primary-500\", \"hover:text-primary-400\"], [1, \"group\", \"relative\", \"mb-10\", \"flex\", \"w-full\", \"justify-center\", \"rounded-md\", \"border\", \"border-transparent\", \"bg-primary-500\", \"py-2\", \"px-4\", \"text-sm\", \"font-medium\", \"text-white\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary-500\", \"focus:ring-offset-2\", \"hover:bg-primary-400\"], [\"routerLink\", \"/auth/sign-in\", 1, \"text-primary-500\", \"hover:text-primary-400\"], [1, \"is__invalid-error\"], [4, \"ngIf\"]],\n  template: function SignUpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SignUpComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \" Sign Up \");\n      i0.ɵɵelementStart(4, \"span\", 3);\n      i0.ɵɵtext(5, \"!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"p\", 4);\n      i0.ɵɵtext(7, \"Let's get started with your 30 day free trial\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵelement(9, \"svg-icon\", 6);\n      i0.ɵɵtext(10, \" Log in with Google \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"p\", 8);\n      i0.ɵɵtext(13, \"or\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"div\", 10)(16, \"div\", 11);\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \" Email address \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(20, SignUpComponent_div_20_Template, 3, 2, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 10)(22, \"div\", 11);\n      i0.ɵɵelement(23, \"input\", 15);\n      i0.ɵɵelementStart(24, \"label\", 16);\n      i0.ɵɵtext(25, \" Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"span\", 17);\n      i0.ɵɵlistener(\"click\", function SignUpComponent_Template_span_click_26_listener() {\n        return ctx.togglePasswordTextType();\n      });\n      i0.ɵɵelement(27, \"svg-icon\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, SignUpComponent_div_28_Template, 2, 1, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 19);\n      i0.ɵɵelement(30, \"div\", 20)(31, \"div\", 20)(32, \"div\", 20)(33, \"div\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"span\", 21);\n      i0.ɵɵtext(35, \"Use 8 or more characters with a mix of letters, numbers & symbols.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 11);\n      i0.ɵɵelement(37, \"input\", 22);\n      i0.ɵɵelementStart(38, \"label\", 23);\n      i0.ɵɵtext(39, \" Confirm Password \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"div\", 24)(41, \"div\", 25);\n      i0.ɵɵelement(42, \"input\", 26);\n      i0.ɵɵelementStart(43, \"label\", 27);\n      i0.ɵɵtext(44, \" I Accept the \");\n      i0.ɵɵelementStart(45, \"a\", 28);\n      i0.ɵɵtext(46, \" Terms \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(47, \"button\", 29);\n      i0.ɵɵtext(48, \" Sign up \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 4);\n      i0.ɵɵtext(50, \" Already have an Account? \");\n      i0.ɵɵelementStart(51, \"a\", 30);\n      i0.ɵɵtext(52, \"Sign in\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"svgClass\", \"h-6 w-6 mr-2\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"type\", ctx.passwordTextType ? \"text\" : \"password\")(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", !ctx.passwordTextType ? \"assets/icons/outline/eye-off.svg\" : \"assets/icons/outline/eye.svg\")(\"svgClass\", \"h-5 w-5\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i2.RouterLink, i4.SvgIconComponent, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzaWduLXVwLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hdXRoL3BhZ2VzL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","SignUpComponent","constructor","_formBuilder","_router","ngOnInit","form","group","email","required","password","f","controls","togglePasswordTextType","passwordTextType","onSubmit","console","log","submitted","fullname","phone","value","invalid","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/tiendung1998/Documents/Angular/document-management/src/app/modules/auth/pages/sign-up/sign-up.component.ts","/Users/tiendung1998/Documents/Angular/document-management/src/app/modules/auth/pages/sign-up/sign-up.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\n// import { AppState } from 'src/app/store/app.state';\n// import { signupStart } from 'src/app/store/auth/auth.actions';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  form!: FormGroup;\n  submitted = false;\n  passwordTextType!: boolean;\n\n  constructor(private readonly _formBuilder: FormBuilder, private readonly _router: Router) {}\n\n  ngOnInit(): void {\n    this.form = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  togglePasswordTextType() {\n    this.passwordTextType = !this.passwordTextType;\n  }\n\n  onSubmit() {\n    console.log(\"========\")\n    this.submitted = true;\n    const { email, password, fullname, phone } = this.form.value;\n\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    // this.store.dispatch(signupStart({ fullname, email, password, phone }));\n\n    // this._router.navigate(['/']);\n  }\n}\n","<form class=\"my-10 space-y-6\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"text-center\">\n    <h2 class=\"mb-1 text-3xl font-semibold text-gray-700 dark:text-white\">\n      Sign Up <span class=\"text-primary-500\">!</span>\n    </h2>\n    <p class=\"text-sm text-gray-400 dark:text-night-200\">Let's get started with your 30 day free trial</p>\n  </div>\n\n  <button\n    type=\"button\"\n    routerLink=\"/dashboard\"\n    class=\"flex w-full items-center justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 hover:bg-gray-50 dark:border-night-500 dark:bg-night-700 dark:text-night-200 dark:hover:bg-night-600\">\n    <svg-icon src=\"assets/icons/google-logo.svg\" [svgClass]=\"'h-6 w-6 mr-2'\"> </svg-icon>\n    Log in with Google\n  </button>\n\n  <div\n    class=\"my-4 flex items-center before:mt-0.5 before:flex-1 before:border-t before:border-gray-300 after:mt-0.5 after:flex-1 after:border-t after:border-gray-300 dark:before:border-night-500 dark:after:border-night-500\">\n    <p class=\"mx-4 mb-0 text-center text-sm text-gray-400 dark:text-night-400\">or</p>\n  </div>\n\n  <div class=\"space-y-3 text-left\">\n    <div class=\"form__group\">\n      <div class=\"relative\">\n        <input\n          type=\"text\"\n          id=\"email\"\n          [ngClass]=\"{ 'is__invalid-input': submitted && f['email'].errors }\"\n          class=\"peer block\"\n          placeholder=\" \"\n          formControlName=\"email\" />\n        <label\n          for=\"email\"\n          class=\"absolute top-2 left-1 z-10 origin-[0] -translate-y-4 scale-95 transform bg-white px-2 text-sm text-gray-500 duration-300 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-95 peer-focus:px-2 peer-focus:text-primary-500 dark:bg-night-700 dark:text-night-200\">\n          Email address\n        </label>\n      </div>\n      <div *ngIf=\"submitted && f['email'].errors\" class=\"is__invalid-error\">\n        <div *ngIf=\"f['email'].errors['required']\">Required field</div>\n        <div *ngIf=\"f['email'].errors['email']\">Email must be an email address valid</div>\n      </div>\n    </div>\n    <div class=\"form__group\">\n      <div class=\"relative\">\n        <input\n          [type]=\"passwordTextType ? 'text' : 'password'\"\n          id=\"password\"\n          [ngClass]=\"{ 'is__invalid-input': submitted && f['email'].errors }\"\n          class=\"peer block\"\n          placeholder=\" \"\n          formControlName=\"password\" />\n        <label\n          for=\"password\"\n          class=\"absolute top-2 left-1 z-10 origin-[0] -translate-y-4 scale-95 transform bg-white px-2 text-sm text-gray-500 duration-300 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-95 peer-focus:px-2 peer-focus:text-primary-600 dark:bg-night-700 dark:text-night-200\">\n          Password\n        </label>\n        <span\n          class=\"absolute top-2.5 right-5 cursor-pointer text-gray-400 dark:text-night-300\"\n          (click)=\"togglePasswordTextType()\">\n          <svg-icon\n            [src]=\"!passwordTextType ? 'assets/icons/outline/eye-off.svg' : 'assets/icons/outline/eye.svg'\"\n            [svgClass]=\"'h-5 w-5'\">\n          </svg-icon>\n        </span>\n      </div>\n      <div *ngIf=\"submitted && f['password'].errors\" class=\"is__invalid-error\">\n        <div *ngIf=\"f['password'].errors['required']\">Required field</div>\n      </div>\n    </div>\n\n    <!-- Password Meeter -->\n    <div class=\"grid grid-cols-4 gap-2\">\n      <div class=\"h-1 rounded-sm bg-gray-200 dark:bg-night-500\"></div>\n      <div class=\"h-1 rounded-sm bg-gray-200 dark:bg-night-500\"></div>\n      <div class=\"h-1 rounded-sm bg-gray-200 dark:bg-night-500\"></div>\n      <div class=\"h-1 rounded-sm bg-gray-200 dark:bg-night-500\"></div>\n    </div>\n    <span class=\"text-xs text-gray-400 dark:text-night-300\"\n      >Use 8 or more characters with a mix of letters, numbers & symbols.</span\n    >\n    <div class=\"relative\">\n      <input type=\"password\" id=\"confirm-password\" class=\"peer block\" placeholder=\" \" />\n      <label\n        for=\"confirm-password\"\n        class=\"absolute top-2 left-1 z-10 origin-[0] -translate-y-4 scale-95 transform bg-white px-2 text-sm text-gray-500 duration-300 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-95 peer-focus:px-2 peer-focus:text-primary-600 dark:bg-night-700 dark:text-night-200\">\n        Confirm Password\n      </label>\n    </div>\n  </div>\n\n  <div class=\"flex items-center justify-between space-x-3\">\n    <div class=\"flex items-center\">\n      <input id=\"accept-term\" name=\"accept-term\" type=\"checkbox\" />\n      <label for=\"accept-term\" class=\"ml-2 block text-sm text-gray-400 dark:text-night-200\">\n        I Accept the\n        <a class=\"font-medium text-primary-500 hover:text-primary-400\"> Terms </a>\n      </label>\n    </div>\n  </div>\n\n  <!-- Submit Button -->\n  <button\n    class=\"group relative mb-10 flex w-full justify-center rounded-md border border-transparent bg-primary-500 py-2 px-4 text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 hover:bg-primary-400\">\n    Sign up\n  </button>\n\n  <!-- Sign-up -->\n  <div class=\"text-sm text-gray-400 dark:text-night-200\">\n    Already have an Account? <a routerLink=\"/auth/sign-in\" class=\"text-primary-500 hover:text-primary-400\">Sign in</a>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
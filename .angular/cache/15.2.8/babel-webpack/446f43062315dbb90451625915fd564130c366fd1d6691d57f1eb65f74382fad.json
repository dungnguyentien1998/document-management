{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as userActions from '../../../../app-state/actions';\nimport * as fromRoot from '../../../../app-state';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"angular-svg-icon\";\nfunction SignInComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignInComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be an email address valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignInComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, SignInComponent_div_20_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵtemplate(2, SignInComponent_div_20_div_2_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"email\"].errors[\"email\"]);\n  }\n}\nfunction SignInComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Required field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignInComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtemplate(1, SignInComponent_div_28_div_1_Template, 2, 0, \"div\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"password\"].errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is__invalid-input\": a0\n  };\n};\n// import { AppState } from 'src/app/store/app.state';\n// import { loginStart } from 'src/app/store/auth/auth.actions';\nexport class SignInComponent {\n  constructor(_formBuilder, router, store) {\n    this._formBuilder = _formBuilder;\n    this.router = router;\n    this.store = store;\n    this.submitted = false;\n    this.model = new User();\n    this.destroy$ = new Subject();\n    this.store.select(fromRoot.userLogin).pipe(takeUntil(this.destroy$)).subscribe(data => {\n      console.log('data::::', data);\n      if (data.isLoadingSuccess && data.result.accessToken) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  ngOnInit() {\n    this.form = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.form.controls;\n  }\n  togglePasswordTextType() {\n    this.passwordTextType = !this.passwordTextType;\n  }\n  onSubmit() {\n    console.log(\"========\");\n    this.submitted = true;\n    const {\n      email,\n      password\n    } = this.form.value;\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(this.model);\n    this.store.dispatch(userActions.login({\n      user: {\n        email: email,\n        password: password\n      }\n    }));\n  }\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\nSignInComponent.ɵfac = function SignInComponent_Factory(t) {\n  return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Store));\n};\nSignInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignInComponent,\n  selectors: [[\"app-sign-in\"]],\n  decls: 43,\n  vars: 13,\n  consts: [[1, \"my-10\", \"space-y-6\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"mb-1\", \"text-3xl\", \"font-semibold\", \"text-gray-700\", \"dark:text-white\"], [1, \"text-primary-500\"], [1, \"text-sm\", \"text-gray-400\", \"dark:text-night-200\"], [\"type\", \"button\", \"routerLink\", \"/dashboard\", 1, \"flex\", \"w-full\", \"items-center\", \"justify-center\", \"rounded-md\", \"border\", \"border-gray-300\", \"bg-white\", \"py-2\", \"px-4\", \"text-sm\", \"font-medium\", \"text-gray-400\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary-500\", \"focus:ring-offset-2\", \"hover:bg-gray-50\", \"dark:border-night-500\", \"dark:bg-night-700\", \"dark:text-night-200\", \"dark:hover:bg-night-600\"], [\"src\", \"assets/icons/google-logo.svg\", 3, \"svgClass\"], [1, \"my-4\", \"flex\", \"items-center\", \"before:mt-0.5\", \"before:flex-1\", \"before:border-t\", \"before:border-gray-300\", \"after:mt-0.5\", \"after:flex-1\", \"after:border-t\", \"after:border-gray-300\", \"dark:before:border-night-500\", \"dark:after:border-night-500\"], [1, \"mx-4\", \"mb-0\", \"text-center\", \"text-sm\", \"text-gray-400\", \"dark:text-night-400\"], [1, \"space-y-3\", \"text-left\"], [1, \"form__group\"], [1, \"relative\"], [\"type\", \"text\", \"id\", \"email\", \"placeholder\", \" \", \"formControlName\", \"email\", 1, \"peer\", \"block\", 3, \"ngClass\"], [\"for\", \"email\", 1, \"absolute\", \"top-2\", \"left-1\", \"z-10\", \"origin-[0]\", \"-translate-y-4\", \"scale-95\", \"transform\", \"bg-white\", \"px-2\", \"text-sm\", \"text-gray-500\", \"duration-300\", \"peer-placeholder-shown:top-1/2\", \"peer-placeholder-shown:-translate-y-1/2\", \"peer-placeholder-shown:scale-100\", \"peer-focus:top-2\", \"peer-focus:-translate-y-4\", \"peer-focus:scale-95\", \"peer-focus:px-2\", \"peer-focus:text-primary-500\", \"dark:bg-night-700\", \"dark:text-night-200\"], [\"class\", \"is__invalid-error\", 4, \"ngIf\"], [\"id\", \"password\", \"placeholder\", \" \", \"formControlName\", \"password\", 1, \"peer\", \"block\", 3, \"type\", \"ngClass\"], [\"for\", \"password\", 1, \"absolute\", \"top-2\", \"left-1\", \"z-10\", \"origin-[0]\", \"-translate-y-4\", \"scale-95\", \"transform\", \"bg-white\", \"px-2\", \"text-sm\", \"text-gray-500\", \"duration-300\", \"peer-placeholder-shown:top-1/2\", \"peer-placeholder-shown:-translate-y-1/2\", \"peer-placeholder-shown:scale-100\", \"peer-focus:top-2\", \"peer-focus:-translate-y-4\", \"peer-focus:scale-95\", \"peer-focus:px-2\", \"peer-focus:text-primary-600\", \"dark:bg-night-700\", \"dark:text-night-200\"], [1, \"absolute\", \"top-2.5\", \"right-5\", \"cursor-pointer\", \"text-gray-400\", \"dark:text-night-300\", 3, \"click\"], [3, \"src\", \"svgClass\"], [1, \"flex\", \"items-center\", \"justify-between\", \"space-x-3\"], [1, \"flex\", \"items-center\"], [\"id\", \"remember-me\", \"name\", \"remember-me\", \"type\", \"checkbox\"], [\"for\", \"remember-me\", 1, \"ml-2\", \"block\", \"text-sm\", \"text-gray-400\", \"dark:text-night-200\"], [1, \"text-sm\"], [\"routerLink\", \"/auth/forgot-password\", 1, \"font-medium\", \"text-primary-500\", \"hover:text-primary-400\"], [1, \"group\", \"relative\", \"mb-10\", \"flex\", \"w-full\", \"justify-center\", \"rounded-md\", \"border\", \"border-transparent\", \"bg-primary-500\", \"py-2\", \"px-4\", \"text-sm\", \"font-medium\", \"text-white\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-primary-500\", \"focus:ring-offset-2\", \"hover:bg-primary-400\"], [\"routerLink\", \"/auth/sign-up\", 1, \"text-primary-500\", \"hover:text-primary-400\"], [1, \"is__invalid-error\"], [4, \"ngIf\"]],\n  template: function SignInComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function SignInComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h2\", 2);\n      i0.ɵɵtext(3, \" Hello Again \");\n      i0.ɵɵelementStart(4, \"span\", 3);\n      i0.ɵɵtext(5, \"!\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"p\", 4);\n      i0.ɵɵtext(7, \"Enter your credential to access your account.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 5);\n      i0.ɵɵelement(9, \"svg-icon\", 6);\n      i0.ɵɵtext(10, \" Log in with Google \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"p\", 8);\n      i0.ɵɵtext(13, \"or\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 9)(15, \"div\", 10)(16, \"div\", 11);\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \" Email address \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(20, SignInComponent_div_20_Template, 3, 2, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 10)(22, \"div\", 11);\n      i0.ɵɵelement(23, \"input\", 15);\n      i0.ɵɵelementStart(24, \"label\", 16);\n      i0.ɵɵtext(25, \" Password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"span\", 17);\n      i0.ɵɵlistener(\"click\", function SignInComponent_Template_span_click_26_listener() {\n        return ctx.togglePasswordTextType();\n      });\n      i0.ɵɵelement(27, \"svg-icon\", 18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(28, SignInComponent_div_28_Template, 2, 1, \"div\", 14);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 19)(30, \"div\", 20);\n      i0.ɵɵelement(31, \"input\", 21);\n      i0.ɵɵelementStart(32, \"label\", 22);\n      i0.ɵɵtext(33, \" Remember me \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 23)(35, \"a\", 24);\n      i0.ɵɵtext(36, \" Forgot your password? \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(37, \"button\", 25);\n      i0.ɵɵtext(38, \" Sign in \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"div\", 4);\n      i0.ɵɵtext(40, \" Not a Member yet? \");\n      i0.ɵɵelementStart(41, \"a\", 26);\n      i0.ɵɵtext(42, \"Sign up\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"svgClass\", \"h-6 w-6 mr-2\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"email\"].errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"type\", ctx.passwordTextType ? \"text\" : \"password\")(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f[\"email\"].errors));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"src\", !ctx.passwordTextType ? \"assets/icons/outline/eye-off.svg\" : \"assets/icons/outline/eye.svg\")(\"svgClass\", \"h-5 w-5\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i2.RouterLink, i5.SvgIconComponent, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".is__invalid-input[_ngcontent-%COMP%] {\\n  border-color: #e11d48;\\n}\\n\\n.is__invalid-error[_ngcontent-%COMP%] {\\n  color: #e11d48;\\n  padding-left: 0.25rem;\\n  padding-right: 0.25rem;\\n  padding-top: 0.25rem;\\n  font-size: 0.75rem;\\n  line-height: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ24taW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQkFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtFQUNBLHFCQUFBO0VBQUEsc0JBQUE7RUFBQSxvQkFBQTtFQUFBLGtCQUFBO0VBQUEsaUJBQUE7QUFDRiIsImZpbGUiOiJzaWduLWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlzX19pbnZhbGlkLWlucHV0IHtcbiAgYm9yZGVyLWNvbG9yOiAjZTExZDQ4O1xufVxuXG4uaXNfX2ludmFsaWQtZXJyb3Ige1xuICBjb2xvcjogI2UxMWQ0ODtcbiAgQGFwcGx5IHB4LTEgcHQtMSB0ZXh0LXhzO1xufVxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbW9kdWxlcy9hdXRoL3BhZ2VzL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0VBQ0EscUJBQUE7RUFBQSxzQkFBQTtFQUFBLG9CQUFBO0VBQUEsa0JBQUE7RUFBQSxpQkFBQTtBQUNGO0FBS0Esd2dCQUF3Z0IiLCJzb3VyY2VzQ29udGVudCI6WyIuaXNfX2ludmFsaWQtaW5wdXQge1xuICBib3JkZXItY29sb3I6ICNlMTFkNDg7XG59XG5cbi5pc19faW52YWxpZC1lcnJvciB7XG4gIGNvbG9yOiAjZTExZDQ4O1xuICBAYXBwbHkgcHgtMSBwdC0xIHRleHQteHM7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport class User {\n  constructor() {}\n}","map":{"version":3,"mappings":"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","names":["Validators","userActions","fromRoot","Subject","takeUntil","i0","SignInComponent","constructor","_formBuilder","router","store","User","select","userLogin","pipe","destroy$","subscribe","data","console","log","isLoadingSuccess","result","accessToken","navigate","ngOnInit","form","group","email","required","password","f","controls","togglePasswordTextType","passwordTextType","onSubmit","submitted","value","invalid","model","dispatch","login","user","ngOnDestroy","next","unsubscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/tiendung1998/Documents/Angular/document-management/src/app/modules/auth/pages/sign-in/sign-in.component.ts","/Users/tiendung1998/Documents/Angular/document-management/src/app/modules/auth/pages/sign-in/sign-in.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport * as userActions from '../../../../app-state/actions';\nimport * as fromRoot from '../../../../app-state';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NgForm } from '@angular/forms';\n// import { AppState } from 'src/app/store/app.state';\n// import { loginStart } from 'src/app/store/auth/auth.actions';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit, OnDestroy {\n  form!: FormGroup;\n  submitted = false;\n  passwordTextType!: boolean;\n\n  constructor(private readonly _formBuilder: FormBuilder, private router: Router, private readonly store: Store) {\n    this.store.select(fromRoot.userLogin).pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(data => {\n      console.log('data::::', data);\n      if (data.isLoadingSuccess && data.result.accessToken) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n\n  model: User = new User();\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  ngOnInit(): void {\n    this.form = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  togglePasswordTextType() {\n    this.passwordTextType = !this.passwordTextType;\n  }\n\n  onSubmit() {\n    console.log(\"========\")\n    this.submitted = true;\n    const { email, password } = this.form.value;\n\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    console.log(this.model)\n    this.store.dispatch(userActions.login({user: { email: email, password: password }}));\n  }\n\n  ngOnDestroy(){\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n\nexport class User {\n\n  constructor(\n\n  ) {  }\n\n  public email!: string;\n  public password!: string;\n\n}\n","<!-- login form -->\n<form class=\"my-10 space-y-6\" [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"text-center\">\n    <h2 class=\"mb-1 text-3xl font-semibold text-gray-700 dark:text-white\">\n      Hello Again <span class=\"text-primary-500\">!</span>\n    </h2>\n    <p class=\"text-sm text-gray-400 dark:text-night-200\">Enter your credential to access your account.</p>\n  </div>\n  <button\n    type=\"button\"\n    routerLink=\"/dashboard\"\n    class=\"flex w-full items-center justify-center rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-400 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 hover:bg-gray-50 dark:border-night-500 dark:bg-night-700 dark:text-night-200 dark:hover:bg-night-600\">\n    <svg-icon src=\"assets/icons/google-logo.svg\" [svgClass]=\"'h-6 w-6 mr-2'\"> </svg-icon>\n    Log in with Google\n  </button>\n\n  <div\n    class=\"my-4 flex items-center before:mt-0.5 before:flex-1 before:border-t before:border-gray-300 after:mt-0.5 after:flex-1 after:border-t after:border-gray-300 dark:before:border-night-500 dark:after:border-night-500\">\n    <p class=\"mx-4 mb-0 text-center text-sm text-gray-400 dark:text-night-400\">or</p>\n  </div>\n\n  <div class=\"space-y-3 text-left\">\n    <div class=\"form__group\">\n      <div class=\"relative\">\n        <input\n          type=\"text\"\n          id=\"email\"\n          [ngClass]=\"{ 'is__invalid-input': submitted && f['email'].errors }\"\n          class=\"peer block\"\n          placeholder=\" \"\n          formControlName=\"email\" />\n        <label\n          for=\"email\"\n          class=\"absolute top-2 left-1 z-10 origin-[0] -translate-y-4 scale-95 transform bg-white px-2 text-sm text-gray-500 duration-300 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-95 peer-focus:px-2 peer-focus:text-primary-500 dark:bg-night-700 dark:text-night-200\">\n          Email address\n        </label>\n      </div>\n      <div *ngIf=\"submitted && f['email'].errors\" class=\"is__invalid-error\">\n        <div *ngIf=\"f['email'].errors['required']\">Required field</div>\n        <div *ngIf=\"f['email'].errors['email']\">Email must be an email address valid</div>\n      </div>\n    </div>\n\n    <div class=\"form__group\">\n      <div class=\"relative\">\n        <input\n          [type]=\"passwordTextType ? 'text' : 'password'\"\n          id=\"password\"\n          [ngClass]=\"{ 'is__invalid-input': submitted && f['email'].errors }\"\n          class=\"peer block\"\n          placeholder=\" \"\n          formControlName=\"password\" />\n        <label\n          for=\"password\"\n          class=\"absolute top-2 left-1 z-10 origin-[0] -translate-y-4 scale-95 transform bg-white px-2 text-sm text-gray-500 duration-300 peer-placeholder-shown:top-1/2 peer-placeholder-shown:-translate-y-1/2 peer-placeholder-shown:scale-100 peer-focus:top-2 peer-focus:-translate-y-4 peer-focus:scale-95 peer-focus:px-2 peer-focus:text-primary-600 dark:bg-night-700 dark:text-night-200\">\n          Password\n        </label>\n        <span\n          class=\"absolute top-2.5 right-5 cursor-pointer text-gray-400 dark:text-night-300\"\n          (click)=\"togglePasswordTextType()\">\n          <svg-icon\n            [src]=\"!passwordTextType ? 'assets/icons/outline/eye-off.svg' : 'assets/icons/outline/eye.svg'\"\n            [svgClass]=\"'h-5 w-5'\">\n          </svg-icon>\n        </span>\n      </div>\n      <div *ngIf=\"submitted && f['password'].errors\" class=\"is__invalid-error\">\n        <div *ngIf=\"f['password'].errors['required']\">Required field</div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"flex items-center justify-between space-x-3\">\n    <div class=\"flex items-center\">\n      <input id=\"remember-me\" name=\"remember-me\" type=\"checkbox\" />\n      <label for=\"remember-me\" class=\"ml-2 block text-sm text-gray-400 dark:text-night-200\"> Remember me </label>\n    </div>\n\n    <div class=\"text-sm\">\n      <a routerLink=\"/auth/forgot-password\" class=\"font-medium text-primary-500 hover:text-primary-400\">\n        Forgot your password?\n      </a>\n    </div>\n  </div>\n\n  <!-- Submit Button -->\n  <button\n    class=\"group relative mb-10 flex w-full justify-center rounded-md border border-transparent bg-primary-500 py-2 px-4 text-sm font-medium text-white focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 hover:bg-primary-400\">\n    Sign in\n  </button>\n\n  <!-- Sign-up -->\n  <div class=\"text-sm text-gray-400 dark:text-night-200\">\n    Not a Member yet? <a routerLink=\"/auth/sign-up\" class=\"text-primary-500 hover:text-primary-400\">Sign up</a>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { environment } from '../../environments/environment';\nimport * as fromUser from './reducers/user.reducer';\nimport * as fromTodo from './reducers/report.reducer';\nimport * as fromLog from './reducers/log.reducer';\nimport * as fromRequest from './reducers/request.reducer';\nexport const reducers = {\n  user: fromUser.reducer,\n  todo: fromTodo.reducer\n};\nconst reducerKeys = ['user', 'todo'];\nexport function localStorageSyncReducer(reducer) {\n  return localStorageSync({\n    keys: reducerKeys\n  })(reducer);\n}\n// console.log all actions\nexport function debug(reducer) {\n  return function (state, action) {\n    console.log('state', state);\n    console.log('action', action);\n    return reducer(state, action);\n  };\n}\nexport const metaReducers = !environment.production ? [debug, localStorageSyncReducer] : [localStorageSyncReducer];\nexport const getLoginState = createFeatureSelector('user');\nexport const getLoggedInUser = createSelector(getLoginState, fromUser.getLoggedInUser);\nexport const userLogin = createSelector(getLoginState, fromUser.userLogin);\nexport const userSignup = createSelector(getLoginState, fromUser.userSignup);\n// Todo reducers Begin\nexport const geTodoState = createFeatureSelector('todo');\nexport const getReports = createSelector(geTodoState, fromTodo.getReports);\n// Todo reducers Begin\nexport const getLogState = createFeatureSelector('log');\nexport const getLogs = createSelector(getLogState, fromLog.getLogs);\n// Todo reducers Begin\nexport const getRequestState = createFeatureSelector('request');\nexport const getRequests = createSelector(getRequestState, fromRequest.getRequests);","map":{"version":3,"mappings":"AAAA,SAGEA,qBAAqB,EACrBC,cAAc,QAET,aAAa;AACpB,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,OAAO,KAAKC,QAAQ,MAAM,yBAAyB;AACnD,OAAO,KAAKC,QAAQ,MAAM,2BAA2B;AACrD,OAAO,KAAKC,OAAO,MAAM,wBAAwB;AACjD,OAAO,KAAKC,WAAW,MAAM,4BAA4B;AAOzD,OAAO,MAAMC,QAAQ,GAA4B;EAC/CC,IAAI,EAAEL,QAAQ,CAACM,OAAO;EACtBC,IAAI,EAAEN,QAAQ,CAACK;CAChB;AAED,MAAME,WAAW,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC;AACpC,OAAM,SAAUC,uBAAuB,CAACH,OAA2B;EACjE,OAAOR,gBAAgB,CAAC;IAACY,IAAI,EAAEF;EAAW,CAAC,CAAC,CAACF,OAAO,CAAC;AACvD;AAEA;AACA,OAAM,SAAUK,KAAK,CAACL,OAA2B;EAC/C,OAAO,UAASM,KAAK,EAAEC,MAAM;IAC3BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAAC;IAC3BE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;IAE7B,OAAOP,OAAO,CAACM,KAAK,EAAEC,MAAM,CAAC;EAC/B,CAAC;AACH;AAGA,OAAO,MAAMG,YAAY,GAAyB,CAACjB,WAAW,CAACkB,UAAU,GAAG,CAACN,KAAK,EAAEF,uBAAuB,CAAC,GAAG,CAACA,uBAAuB,CAAC;AAExI,OAAO,MAAMS,aAAa,GAAGtB,qBAAqB,CAAiB,MAAM,CAAC;AAE1E,OAAO,MAAMuB,eAAe,GAAGtB,cAAc,CAC3CqB,aAAa,EACblB,QAAQ,CAACmB,eAAe,CACzB;AAED,OAAO,MAAMC,SAAS,GAAGvB,cAAc,CACrCqB,aAAa,EACblB,QAAQ,CAACoB,SAAS,CACnB;AAED,OAAO,MAAMC,UAAU,GAAGxB,cAAc,CACtCqB,aAAa,EACblB,QAAQ,CAACqB,UAAU,CACpB;AAGD;AAEA,OAAO,MAAMC,WAAW,GAAG1B,qBAAqB,CAAiB,MAAM,CAAC;AAExE,OAAO,MAAM2B,UAAU,GAAG1B,cAAc,CACtCyB,WAAW,EACXrB,QAAQ,CAACsB,UAAU,CACpB;AAED;AAEA,OAAO,MAAMC,WAAW,GAAG5B,qBAAqB,CAAgB,KAAK,CAAC;AAEtE,OAAO,MAAM6B,OAAO,GAAG5B,cAAc,CACnC2B,WAAW,EACXtB,OAAO,CAACuB,OAAO,CAChB;AAED;AAEA,OAAO,MAAMC,eAAe,GAAG9B,qBAAqB,CAAoB,SAAS,CAAC;AAElF,OAAO,MAAM+B,WAAW,GAAG9B,cAAc,CACvC6B,eAAe,EACfvB,WAAW,CAACwB,WAAW,CACxB","names":["createFeatureSelector","createSelector","localStorageSync","environment","fromUser","fromTodo","fromLog","fromRequest","reducers","user","reducer","todo","reducerKeys","localStorageSyncReducer","keys","debug","state","action","console","log","metaReducers","production","getLoginState","getLoggedInUser","userLogin","userSignup","geTodoState","getReports","getLogState","getLogs","getRequestState","getRequests"],"sourceRoot":"","sources":["/Users/tiendung1998/Documents/Angular/document-management/src/app/app-state/index.ts"],"sourcesContent":["import {\n  ActionReducer,\n  ActionReducerMap,\n  createFeatureSelector,\n  createSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { environment } from '../../environments/environment';\nimport * as fromUser from './reducers/user.reducer';\nimport * as fromTodo from './reducers/report.reducer';\nimport * as fromLog from './reducers/log.reducer';\nimport * as fromRequest from './reducers/request.reducer';\n\nexport interface State {\n  user: fromUser.State;\n  todo: fromTodo.State;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  user: fromUser.reducer,\n  todo: fromTodo.reducer,\n};\n\nconst reducerKeys = ['user', 'todo'];\nexport function localStorageSyncReducer(reducer: ActionReducer<any>): ActionReducer<any> {\n  return localStorageSync({keys: reducerKeys})(reducer);\n}\n\n// console.log all actions\nexport function debug(reducer: ActionReducer<any>): ActionReducer<any> {\n  return function(state, action) {\n    console.log('state', state);\n    console.log('action', action);\n\n    return reducer(state, action);\n  };\n}\n\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [debug, localStorageSyncReducer] : [localStorageSyncReducer];\n\nexport const getLoginState = createFeatureSelector<fromUser.State>('user');\n\nexport const getLoggedInUser = createSelector(\n  getLoginState,\n  fromUser.getLoggedInUser\n);\n\nexport const userLogin = createSelector(\n  getLoginState,\n  fromUser.userLogin\n);\n\nexport const userSignup = createSelector(\n  getLoginState,\n  fromUser.userSignup\n);\n\n\n// Todo reducers Begin\n\nexport const geTodoState = createFeatureSelector<fromTodo.State>('todo');\n\nexport const getReports = createSelector(\n  geTodoState,\n  fromTodo.getReports\n);\n\n// Todo reducers Begin\n\nexport const getLogState = createFeatureSelector<fromLog.State>('log');\n\nexport const getLogs = createSelector(\n  getLogState,\n  fromLog.getLogs\n);\n\n// Todo reducers Begin\n\nexport const getRequestState = createFeatureSelector<fromRequest.State>('request');\n\nexport const getRequests = createSelector(\n  getRequestState,\n  fromRequest.getRequests\n);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}